[{"C:\\Users\\ELCOT\\first\\src\\index.js":"1","C:\\Users\\ELCOT\\first\\src\\App.js":"2","C:\\Users\\ELCOT\\first\\src\\reportWebVitals.js":"3","C:\\Users\\ELCOT\\first\\src\\components\\Login.js":"4","C:\\Users\\ELCOT\\first\\src\\components\\Register.js":"5","C:\\Users\\ELCOT\\first\\src\\components\\Demo1.js":"6","C:\\Users\\ELCOT\\first\\src\\components\\Display.js":"7"},{"size":500,"mtime":499162500000,"results":"8","hashOfConfig":"9"},{"size":970,"mtime":1606878862469,"results":"10","hashOfConfig":"9"},{"size":362,"mtime":499162500000,"results":"11","hashOfConfig":"9"},{"size":3742,"mtime":1606796747538,"results":"12","hashOfConfig":"9"},{"size":4069,"mtime":1606797279625,"results":"13","hashOfConfig":"9"},{"size":3115,"mtime":1606878661541,"results":"14","hashOfConfig":"9"},{"size":833,"mtime":1606877842460,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"10b6e7o",{"filePath":"19","messages":"20","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25","usedDeprecatedRules":"26"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29","usedDeprecatedRules":"30"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"33","messages":"34","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35"},"C:\\Users\\ELCOT\\first\\src\\index.js",[],["36","37"],"C:\\Users\\ELCOT\\first\\src\\App.js",["38"],"C:\\Users\\ELCOT\\first\\src\\reportWebVitals.js",[],"C:\\Users\\ELCOT\\first\\src\\components\\Login.js",["39","40","41","42"],"import React,{useEffect,useState} from 'react';\r\nimport {useFormik} from 'formik';\r\nimport * as yup from 'yup';\r\nimport { toast } from 'react-toastify'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport './Login_style.css';\r\n\r\n \r\nconst Login = () => {\r\n    const formik =useFormik({\r\n            initialValues:{\r\n            \r\n            email:\" \",\r\n            password:\" \",\r\n            \r\n    },\r\n        validationSchema:yup.object ({\r\n        \r\n        email: yup.string()\r\n        .email()\r\n        .required(\"Email is required \"),\r\n        password: yup.string()\r\n        .required(\"Password is required\"),\r\n        }) ,\r\n        \r\n        onSubmit:(data) =>{\r\n          toast.success(\"Login Successfully\")\r\n          console.log(data)\r\n        }\r\n      })\r\n     \r\n     return(\r\n            <div className=\"container col-12 col-mt3\">\r\n             <div className=\"row justify-content-center\">\r\n              <div className=\"card \">\r\n               <div className=\"col text-center\">\r\n                 <h3 className=\"font-weight-bold\">Welcome Back</h3><br/>\r\n                 <button class=\"btn btn-primary btn-lg btn-facebook btn-block text-uppercase\" type=\"submit\"><FontAwesomeIcon icon={['fab', 'facebook']} size=\"1x\" color=\"white\"/>\r\n                  Sign in with Facebook</button>\r\n                 <br/>\r\n                 <h4><center>OR</center></h4><br/></div>\r\n                  <form autoComplete=\"off\" method=\"post\" onSubmit={formik.handleSubmit}>\r\n                    <div className=\"form-group\">\r\n                     <label>Email:</label>\r\n                     <input name=\"email\" className=\"form-control\" type=\"text\" placeholder=\"Email or UserName\"\r\n                      onChange={formik.handleChange}\r\n                      value={formik.values.email}/>\r\n                      {\r\n                           formik.errors.email ?\r\n                          <div className=\"text-danger\" > {formik.errors.email}\r\n                          </div>:\r\n                          null\r\n                      }\r\n                    </div>\r\n                      <div className=\"form-group\">\r\n                    <label>password:</label>\r\n                     <input type=\"text\" name=\"password\" className=\"form-control\"  placeholder=\"password\"\r\n                      onChange={formik.handleChange}\r\n                      value={formik.values.password}/>\r\n                      {\r\n                           formik.errors.password ?\r\n                          <div className=\"text-danger\" > {formik.errors.password}\r\n                          </div>:\r\n                          null\r\n                      }\r\n                      </div>\r\n                      <div className=\"d-flex justify-content-between\">\r\n                        <div>\r\n                      <input type=\"checkbox\" id=\"login\" name=\"login\" value=\"Bike\"/>\r\n                      <label for=\"login\">Remember</label><br/>\r\n                      </div>\r\n                      <a href=\"#\" >\r\n                         <h5>Forget Password</h5>\r\n                      </a>\r\n                      </div>\r\n                      <button class=\"btn btn-lg btn-primary btn-block text-uppercase\" type=\"submit\">Login</button>\r\n                      <hr/>\r\n                      <div class=\"form-footer\">\r\n                          <p>Don't have an account?<a href=\"#\" onClick=  {()=>{\r\n                            window.location.href='register'\r\n                      }}>\r\n                         <h4>SignUp</h4>\r\n                      </a>\r\n                      </p>\r\n                     </div>\r\n                     </form>\r\n                    </div>\r\n               </div>\r\n              </div>\r\n          )\r\n    }\r\n\r\nexport default Login;\r\n\r\n\r\n",["43","44"],"C:\\Users\\ELCOT\\first\\src\\components\\Register.js",["45"],"import React from 'react';\r\nimport {useFormik} from 'formik';\r\nimport * as yup from 'yup';\r\n\r\nimport {toast} from 'react-toastify'\r\nconst Form = (props) => {\r\n  const formik =useFormik({\r\n     initialValues:{\r\n     name:\" \",\r\n     email:\" \",\r\n     password:\" \",\r\n     confirmpassword:\" \"\r\n },\r\nvalidationSchema:yup.object ({\r\n    name: yup.string()\r\n    .required( 'This Field  is required'),\r\n   email: yup.string()\r\n   .email('Enter vaild Password')\r\n   .required('This Field  is required'),\r\n   password: yup.string()\r\n   .required('This Field  is required'),\r\n   confirmpassword: yup.string()\r\n   .oneOf([yup.ref(\"password\")],\"Must be same \")\r\n   .required('This Field  is required ')\r\n}) ,\r\n\r\nonSubmit:(data) => {\r\n    console.log(data);\r\n    \r\n       toast.success(\"User successful Registered\")\r\n      props.history.push('/login');\r\n\r\n  \r\n  }\r\n \r\n});\r\n    return(\r\n            <div className=\"container mt-3\">  \r\n            <div className=\"jumbotron\">\r\n                <h4>Register</h4>\r\n                <form autoComplete=\"off\" method=\"post\" onSubmit={formik.handleSubmit}>\r\n                    <div className=\"form-group\">\r\n                    <label>Name:</label>\r\n                     <input className=\"form-control\"\r\n                      type=\"text\"\r\n                      name=\"name\"\r\n                      onChange={formik.handleChange}\r\n                      value={formik.values.name} />\r\n                      {\r\n                           formik.errors.name ?\r\n                          <div className=\"text-danger\" > {formik.errors.name }\r\n                          </div>:\r\n                          null\r\n                      }\r\n                      </div>\r\n                      <div className=\"form-group\">\r\n                    <label>Email:</label>\r\n                     <input\r\n                     className=\"form-control\" type=\"text\"\r\n                      name=\"email\"\r\n                      onChange={formik.handleChange}\r\n                      value={formik.values.email} />\r\n                      {\r\n                           formik.errors.email ?\r\n                          <div className=\"text-danger\" > {formik.errors.email}\r\n                          </div>:\r\n                          null\r\n                      }\r\n                      </div>\r\n                      <div className=\"form-group\">\r\n                    <label>password:</label>\r\n                     <input\r\n                     className=\"form-control\" type=\"text\"\r\n                      name=\"password\"\r\n                      onChange={formik.handleChange}\r\n                      value={formik.values.password} />\r\n                      {\r\n                           formik.errors.password ?\r\n                          <div className=\"text-danger\" > {formik.errors.password}\r\n                          </div>:\r\n                          null\r\n                      }\r\n                      </div>\r\n                      <div className=\"form-group\">\r\n                    <label>Confirm Password:</label>\r\n                     <input\r\n                     className=\"form-control\" type=\"text\"\r\n                      name=\"confirmpassword\"\r\n                      onChange={formik.handleChange}\r\n                      value={formik.values.confirmpassword} />\r\n                      {\r\n                           formik.errors.confirmpassword ?\r\n                          <div className=\"text-danger\" > {formik.errors.confirmpassword}\r\n                          </div>:\r\n                          null\r\n                      }\r\n                      </div>\r\n                      <div className=\"d-flex justify-content-between\">\r\n                      <button className=\"btn btn-primary\" type=\"submit\"> Submit</button>\r\n                      <a href=\"#\" onClick=  {()=>{\r\n                            window.location.href='login'\r\n                      }}>\r\n                         <h4>login</h4>\r\n                      </a>\r\n                      </div>\r\n                </form>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\nexport default Form;\r\n",["46","47"],"C:\\Users\\ELCOT\\first\\src\\components\\Demo1.js",[],"C:\\Users\\ELCOT\\first\\src\\components\\Display.js",["48"],"import React from 'react';\r\n\r\nclass UserData extends React.Component {\r\n    constructor(props){\r\n        super(props);\r\n    }\r\n    render() {\r\n        return (\r\n            <table>\r\n                <thead>\r\n                    <tr>\r\n                        <th>username</th>\r\n                        <th>password</th>\r\n                        \r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {this.props.friends && this.props.friends.map(friend => {\r\n                        return <tr>\r\n                            <td>{friend.username}</td>\r\n                            <td>{friend.password}</td>\r\n                            \r\n                        </tr>\r\n                    })}\r\n                </tbody>\r\n            </table>\r\n        );\r\n    }\r\n}\r\n\r\nexport default UserData;",{"ruleId":"49","replacedBy":"50"},{"ruleId":"51","replacedBy":"52"},{"ruleId":"53","severity":1,"message":"54","line":1,"column":15,"nodeType":"55","messageId":"56","endLine":1,"endColumn":24},{"ruleId":"53","severity":1,"message":"57","line":1,"column":15,"nodeType":"55","messageId":"56","endLine":1,"endColumn":24},{"ruleId":"53","severity":1,"message":"58","line":1,"column":25,"nodeType":"55","messageId":"56","endLine":1,"endColumn":33},{"ruleId":"59","severity":1,"message":"60","line":72,"column":23,"nodeType":"61","endLine":72,"endColumn":36},{"ruleId":"59","severity":1,"message":"60","line":79,"column":52,"nodeType":"61","endLine":81,"endColumn":26},{"ruleId":"49","replacedBy":"62"},{"ruleId":"51","replacedBy":"63"},{"ruleId":"59","severity":1,"message":"60","line":100,"column":23,"nodeType":"61","endLine":102,"endColumn":26},{"ruleId":"49","replacedBy":"64"},{"ruleId":"51","replacedBy":"65"},{"ruleId":"66","severity":1,"message":"67","line":4,"column":5,"nodeType":"68","messageId":"69","endLine":6,"endColumn":6},"no-native-reassign",["70"],"no-negated-in-lhs",["71"],"no-unused-vars","'Component' is defined but never used.","Identifier","unusedVar","'useEffect' is defined but never used.","'useState' is defined but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement",["70"],["71"],["70"],["71"],"no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","no-global-assign","no-unsafe-negation"]